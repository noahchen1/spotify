{"version":3,"sources":["Login.js","SearchResults.js","Player.js","SearchBar.js","MobileSearchResults.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["AUTH_URL","loginButtonContainer","display","justifyContent","minHeight","alignItems","LoginButton","styled","button","Ripple","div","Login","useState","x","y","coords","setCoords","isRippling","setIsRippling","useEffect","setTimeout","style","href","onClick","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","SearchResultsContainer","Img","img","SearchResults","track","chooseTrack","src","albumUrl","margin","textAlign","title","artist","Player","accessToken","trackUri","play","setPlay","token","showSaveIcon","callback","state","isPlaying","uris","SearchBarContainer","form","Input","input","SearchBar","search","onChange","type","value","placeholder","className","MobileSearchResultsContainer","Image","TrackDescription","MobileSearchResults","spotifyApi","SpotifyWebApi","clientId","SlideWrapper","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","console","log","interval","setInterval","clearInterval","useAuth","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","isDesktop","useMediaQuery","query","isBigScreen","isSmallDesktop","isSmallerDesktop","isMobile","get","params","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","url","position","length","options","perPage","focus","width","overflowY","whiteSpace","bottom","URLSearchParams","location","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ffb743.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Client_ID = 'ee791348c2724f159aa8c08bd6783452'\r\nconst Redirect_URI = 'https://songs-player.herokuapp.com'\r\nconst AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${Client_ID}&response_type=code&redirect_uri=${Redirect_URI}&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state`\r\n\r\n\r\nconst loginButtonContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    minHeight: '100vh',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst LoginButton = styled.button`\r\n    position: relative;\r\n    padding: 1em 0.5em;\r\n    border-radius: 12px; \r\n    border-style: none;\r\n    background-color: #1DB954;\r\n    color: white; \r\n    font-weight: 900;\r\n    font-size: 1.1em;\r\n    cursor: pointer; \r\n\r\n    &:before {\r\n        content: '';\r\n        position: absolute; \r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        background: linear-gradient(45deg, transparent, white, transparent);\r\n        left: -100%;\r\n        transition: 0.5s ease-in-out;\r\n    }        \r\n\r\n    &:hover::before {\r\n        left: 150%;\r\n    }\r\n\r\n    &:before.is-avtive {\r\n        background -color: black;\r\n    }\r\n`\r\n\r\nconst Ripple = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    position: absolute;\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    opacity: 1;\r\n    animation: 0.9s ease 1 forwards ripple-effect;\r\n    z-index: 99;\r\n\r\n    @keyframes ripple-effect {\r\n        0% {\r\n          transform: scale(1);\r\n          opacity: 1;\r\n        }\r\n        50% {\r\n          transform: scale(20);\r\n          opacity: 0.375;\r\n        }\r\n        100% {\r\n          transform: scale(40);\r\n          opacity: 0;\r\n        }\r\n`\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n    \r\n\r\n    const [coords, setCoords] = useState({ x:-1, y:-1 })\r\n    const [isRippling, setIsRippling] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (coords.x !== -1 && coords.y !== -1) {\r\n            setIsRippling(true)\r\n            setTimeout(() => setIsRippling(false), 300)\r\n        } else setIsRippling(false)\r\n    }, [coords])\r\n\r\n    useEffect(() => {\r\n        if(!isRippling) setCoords({ x:-1, y:-1 })\r\n    }, [isRippling])\r\n    \r\n\r\n    return (\r\n\r\n       <div style={loginButtonContainer}>\r\n            <a href={AUTH_URL}>\r\n                <LoginButton\r\n                \r\n                onClick = {e => {\r\n                    const rect = e.target.getBoundingClientRect()                                                 // Get mouse coordinate when click event occurs\r\n                    setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })                              // Update coordinates for ripple effect to take place \r\n                    //setTimeout(() => { window.location.href = AUTH_URL }, 1000)\r\n                }}>Log in with Spotify\r\n\r\n                {isRippling ? (\r\n                    <Ripple \r\n                    style={{    \r\n                        left: coords.x,                                                                          // Set x coordinate of ripple effect\r\n                        top: coords.y                                                                            // Set y coordinate of ripple effect \r\n                    }}\r\n                    />) : ('')}\r\n\r\n                </LoginButton>\r\n            </a>\r\n        </div> \r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst SearchResultsContainer = styled.div `\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 350px;\r\n  margin: 50px 20px;\r\n`\r\nconst Img = styled.img `\r\n  width: 350px;\r\n  height: 350px;\r\n\r\n  @media (max-width: 767px) {\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n\r\n  @media (max-width: 380px) {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n`\r\n\r\nexport default function SearchResults({track, chooseTrack}) {\r\n\r\n    function handlePlay() {\r\n      chooseTrack(track)\r\n    }\r\n\r\n    return (\r\n      \r\n      <div>\r\n\r\n        <SearchResultsContainer onClick={handlePlay}>\r\n          <Img src={track.albumUrl} />\r\n          <div style={{margin: '20px auto', textAlign: 'center'}}>\r\n            <div style={{margin: '5px auto'}}>{track.title}</div>\r\n            <div>{track.artist}</div>\r\n          </div>\r\n        </SearchResultsContainer>\r\n        \r\n      </div>\r\n         \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport SpotifyPlayer from \"react-spotify-web-playback\"\r\n\r\nexport default function Player({accessToken, trackUri}) {\r\n    const [play, setPlay] = useState(false)\r\n\r\n    useEffect(() => setPlay(true), [trackUri])\r\n\r\n    if (!accessToken) return null\r\n\r\n    return <SpotifyPlayer \r\n                token = {accessToken}\r\n                showSaveIcon\r\n                callback = {state => {\r\n                    if (!state.isPlaying) setPlay(false)\r\n                }}\r\n                play = {play}\r\n                uris = {trackUri ? [trackUri] : []}\r\n        />\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst SearchBarContainer = styled.form`\r\n    display: flex; \r\n    justify-content: center; \r\n    animation: 1s ease forwards fade-in;\r\n\r\n    @keyframes fade-in {\r\n        0% {opacity: 0; transform: translateY(-10px); }\r\n        100% {opacity: 1; transform: translateY(10px); }\r\n    }\r\n`\r\nconst Input = styled.input`\r\n    width: 85%;\r\n    max-width: 800px;\r\n    height: 30px;\r\n    margin: 20px 0;\r\n    padding: 15px 0 15px 10px;\r\n    border-radius: 0.5rem; \r\n    border-width: 1.5px;\r\n    border-color: rgba(0, 0, 0, 0.3);\r\n    outline: none;\r\n    font-size: 1.1em;\r\n`\r\n\r\n\r\nexport default function SearchBar({search, onChange}) {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <SearchBarContainer key=\"search-bar\">\r\n\r\n            <Input \r\n                type=\"search\" \r\n                value={search}\r\n                placeholder=\"Search\"\r\n                onChange={onChange}\r\n                key=\"search-input\"\r\n                className='search-input'\r\n            />\r\n            \r\n\r\n\r\n        </SearchBarContainer>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst MobileSearchResultsContainer = styled.div `\r\n    display: flex;\r\n    margin: 5px 0;\r\n`\r\n\r\nconst Image = styled.img `\r\n    width: 80px;\r\n    height: 80px;\r\n`\r\n\r\nconst TrackDescription = styled.div `\r\n    margin-top: auto;\r\n    margin-left: 10px;\r\n`\r\n\r\nexport default function MobileSearchResults({track, chooseTrack}) {\r\n\r\n    function handlePlay() {\r\n        chooseTrack(track)\r\n      }\r\n\r\n    return (\r\n\r\n        <MobileSearchResultsContainer onClick={handlePlay}>\r\n             <Image src={track.albumUrl} />\r\n             <TrackDescription>\r\n                <div>{track.title}</div>\r\n                <div>{track.artist}</div>\r\n             </TrackDescription>\r\n        </MobileSearchResultsContainer>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport useAuth from \"./useAuth\"\r\nimport SearchResults from \"./SearchResults\"\r\nimport Player from \"./Player\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport MobileSearchResults from \"./MobileSearchResults.js\"\r\nimport SpotifyWebApi from 'spotify-web-api-node'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Splide, SplideSlide } from '@splidejs/react-splide'\r\nimport '@splidejs/splide/dist/css/themes/splide-default.min.css';\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: \"ee791348c2724f159aa8c08bd6783452\",\r\n})\r\n\r\nconst SlideWrapper = styled.div `\r\n  display: flex;\r\n  justify-content: center;\r\n  animation: 1s ease forwards fade-in;\r\n\r\n  @keyframes fade-in {\r\n    0% {opacity: 0;}\r\n    100% {opacity: 1;}\r\n  }\r\n`\r\n\r\n\r\nexport default function Dashboard({code}) {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [playingTrack, setPlayingTrack] = useState()\r\n    const [lyrics, setLyrics] = useState(\"\")\r\n\r\n    const isDesktop = useMediaQuery({\r\n      query: '(min-width: 1224px) and (max-width: 1679px)'\r\n    })\r\n\r\n    const isBigScreen = useMediaQuery({\r\n      query: '(min-width: 1680px)'\r\n    })\r\n\r\n    const isSmallDesktop = useMediaQuery({\r\n      query: '(min-width: 1051px) and (max-width: 1224px)'\r\n    })\r\n\r\n    const isSmallerDesktop = useMediaQuery({\r\n      query: '(min-width: 771px) and (max-width: 1050px)'\r\n    })\r\n\r\n    const isMobile = useMediaQuery({\r\n      query: '(max-width: 770px)'\r\n    })\r\n\r\n\r\n\r\n    function chooseTrack(track) {\r\n      setPlayingTrack(track)\r\n      setSearch(\"\")\r\n      setLyrics(\"\")\r\n    }\r\n\r\n     \r\n    useEffect(() => {\r\n      if (!playingTrack) return\r\n      axios.get(\"https://songs-player.herokuapp.com:3001/lyrics\", {\r\n        params: {\r\n          track: playingTrack.title,\r\n          artist: playingTrack.artist\r\n        }\r\n      }).then(res => {\r\n        setLyrics(res.data.lyrics)\r\n      })\r\n    }, [playingTrack]) \r\n    \r\n    useEffect(() => {\r\n        if (!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n    \r\n        let cancel = false\r\n        spotifyApi.searchTracks(search).then(res => {\r\n          if (cancel) return\r\n          setSearchResults(\r\n            res.body.tracks.items.map(track => {\r\n              const smallestAlbumImage = track.album.images.reduce(\r\n                (smallest, image) => {\r\n                  if (image.height > smallest.height) return image\r\n                  return smallest\r\n                },\r\n                track.album.images[0]\r\n              )\r\n    \r\n              return {\r\n                artist: track.artists[0].name,\r\n                title: track.name,\r\n                uri: track.uri,\r\n                albumUrl: smallestAlbumImage.url,\r\n                href: track.href\r\n              }\r\n            })\r\n          )\r\n        })\r\n    \r\n        return () => (cancel = true)\r\n      }, [search, accessToken])\r\n\r\n\r\n\r\n\r\n \r\n    return (\r\n\r\n        <div style={{height:\"100vh\", position: \"relative\"}}>\r\n            <SearchBar \r\n              search={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n            />\r\n\r\n            {isBigScreen && searchResults.length !== 0 &&\r\n                    <SlideWrapper>\r\n                      <Splide\r\n                        options={{\r\n                          type: 'loop',\r\n                          perPage: 4,\r\n                          focus: 'center',\r\n                          width: '80%',\r\n                        }}\r\n    \r\n                      >\r\n                        {searchResults.map(track => (\r\n                          <SplideSlide>\r\n                            <SearchResults track={track} key={track.url} chooseTrack={chooseTrack}/>\r\n                          </SplideSlide>\r\n                        ))}\r\n                      </Splide>\r\n                  </SlideWrapper>\r\n                  }\r\n\r\n            {isDesktop && searchResults.length !== 0 &&\r\n               <SlideWrapper>\r\n                  <Splide\r\n                    options={{\r\n                      type: 'loop',\r\n                      perPage: 4,\r\n                      focus: 'center',\r\n                      width: '100%',\r\n                    }}\r\n\r\n                  >\r\n                    {searchResults.map(track => (\r\n                      <SplideSlide>\r\n                        <SearchResults track={track} key={track.url} chooseTrack={chooseTrack}/>\r\n                      </SplideSlide>\r\n                    ))}\r\n                  </Splide>\r\n                </SlideWrapper>      \r\n            }\r\n\r\n            {isSmallDesktop && searchResults.length !== 0 && \r\n                <SlideWrapper>\r\n                  <Splide\r\n                    options={{\r\n                      type: 'loop',\r\n                      perPage: 3,\r\n                      focus: 'center',\r\n                      width: '100%',\r\n                    }}\r\n\r\n                  >\r\n                    {searchResults.map(track => (\r\n                      <SplideSlide>\r\n                        <SearchResults track={track} key={track.url} chooseTrack={chooseTrack}/>\r\n                      </SplideSlide>\r\n                    ))}\r\n                  </Splide>\r\n                </SlideWrapper>\r\n            }\r\n\r\n            {isSmallerDesktop && searchResults.length !== 0 &&\r\n                <SlideWrapper>\r\n                  <Splide\r\n                    options={{\r\n                      type: 'loop',\r\n                      perPage: 2,\r\n                      focus: 'center',\r\n                      width: '100%',\r\n                    }}\r\n\r\n                  >\r\n                    {searchResults.map(track => (\r\n                      <SplideSlide>\r\n                        <SearchResults track={track} key={track.url} chooseTrack={chooseTrack}/>\r\n                      </SplideSlide>\r\n                    ))}\r\n                  </Splide>\r\n                </SlideWrapper>\r\n            }\r\n\r\n            {isMobile && searchResults.length !== 0 && \r\n              <div style={{width: '80%', height: \"80%\", margin: 'auto', overflowY: \"auto\"}}>\r\n                {searchResults.map(track => (\r\n                  <MobileSearchResults \r\n                    track={track}\r\n                    key={track.url}\r\n                    chooseTrack={chooseTrack}\r\n                  />\r\n                ))}\r\n              </div>\r\n            }\r\n\r\n            {searchResults.length === 0 && (\r\n              <div style={{textAlign: 'center', height: '70%', overflowY: 'auto', whiteSpace: 'pre-wrap', margin: '50px auto'}}> \r\n                {lyrics}\r\n              </div>  \r\n            )} \r\n\r\n\r\n            <div style={{position: \"absolute\", bottom: \"0\", left: \"0\", width: \"100%\"}}>\r\n              <Player \r\n                accessToken = {accessToken}\r\n                trackUri = {playingTrack?.uri}\r\n\r\n              />\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default function useAuth(code) {\r\n    const [accessToken, setAccessToken] = useState()\r\n    const [refreshToken, setRefreshToken] = useState()\r\n    const [expiresIn, setExpiresIn] = useState()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post(\"https://songs-player.herokuapp.com:3001/login\", {code,}).then(res => {\r\n            setAccessToken(res.data.accessToken)\r\n            setRefreshToken(res.data.refreshToken)\r\n            setExpiresIn(res.data.expiresIn)\r\n            window.history.pushState({}, null, \"/\")\r\n        }).catch(() => {\r\n            //window.location = \"/\"\r\n            console.log(\"there is an error\")\r\n        })\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        if(!refreshToken || !expiresIn) return\r\n        const interval = setInterval(() => {\r\n            axios.post(\"https://songs-player.herokuapp.com:3001/refresh\", {refreshToken, }).then(res => {\r\n                setAccessToken(res.data.accessToken)\r\n                setExpiresIn(res.data.expiresIn)\r\n            }).catch(() => {\r\n                //window.location = \"/\"\r\n                console.log(\"there is an error\")\r\n            })\r\n        }, (expiresIn - 60) * 1000)\r\n\r\n        return () => clearInterval(interval)\r\n    }, [refreshToken, expiresIn])\r\n\r\n\r\n\r\n    return  accessToken\r\n}","import Login from './Login'\nimport Dashboard from './Dashboard'\n\nconst code = new URLSearchParams(window.location.search).get('code')\n\nfunction App() {\n  return code ? <Dashboard code={code} key={'Dashboard'}/> : <Login key={'Login'}/>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}